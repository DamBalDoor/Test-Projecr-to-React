{"ast":null,"code":"var _jsxFileName = \"/Users/boostery/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport MyInput from \"./components/UI/input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'JavaScript',\n    body: 'JavaScript - это язык программирования'\n  }, {\n    id: 2,\n    title: 'Python',\n    body: 'Python - это язык программирования'\n  }, {\n    id: 3,\n    title: 'C++',\n    body: 'C++ - это язык программирования'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedPosts = useMemo(() => {\n    console.log(\"ФУНКЦИА ОТРАБОТАТ!\");\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.includes(searchQuery));\n  }, [searchQuery, sortPosts]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n    // console.log(sort)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChenge: sortPosts,\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\",\n        options: [{\n          value: 'title',\n          name: 'По названию'\n        }, {\n          value: 'body',\n          name: 'По описанию'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), posts.length ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u041F\\u043E\\u0441\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cECtYy9waH0+i8mhz80m3Okfs40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useState","PostList","PostForm","MySelect","MyInput","jsxDEV","_jsxDEV","App","_s","posts","setPosts","id","title","body","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedPosts","console","log","sort","a","b","localeCompare","sortedAndSearchedPosts","filter","post","includes","sortPosts","createPost","newPost","removePost","p","className","children","create","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","value","onChange","e","target","placeholder","onChenge","defaultValue","options","name","length","remove","textAlign","_c","$RefreshReg$"],"sources":["/Users/boostery/my-app/src/App.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport './styles/App.css'\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport MyInput from \"./components/UI/input/MyInput\";\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    {id: 1, title: 'JavaScript', body: 'JavaScript - это язык программирования'},\n    {id: 2, title: 'Python', body: 'Python - это язык программирования'},\n    {id: 3, title: 'C++', body: 'C++ - это язык программирования'},\n  ])\n  const [selectedSort, setSelectedSort] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const sortedPosts = useMemo( () => {\n    console.log(\"ФУНКЦИА ОТРАБОТАТ!\")\n    if(selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n    }\n    return posts;\n  }, [selectedSort, posts])\n\n  const sortedAndSearchedPosts = useMemo( () => {\n    return sortedPosts.filter(post => post.title.includes(searchQuery))\n  }, [searchQuery, sortPosts])\n\n  const createPost = (newPost) => {\n    setPosts( [...posts, newPost])\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n  }\n\n  const sortPosts = (sort) => {\n    setSelectedSort(sort);\n    // console.log(sort)\n  }\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost}/>\n      <hr style={{margin: '15px 0'}}/>\n      <div>\n        <MyInput\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          placeholder=\"Поиск...\"\n        />\n        <MySelect \n          value={selectedSort}\n          onChenge={sortPosts}\n          defaultValue=\"Сортировать по\"\n          options={[\n            {value: 'title', name: 'По названию'},\n            {value: 'body', name: 'По описанию'},\n          ]}\n        />\n      </div>\n\n      {posts.length\n        ? <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список Постов\"/>\n        : <h1 style={{textAlign: 'center'}}>Постов нет!</h1>\n\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}